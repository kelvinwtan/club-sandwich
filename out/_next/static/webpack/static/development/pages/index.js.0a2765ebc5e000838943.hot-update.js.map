{"version":3,"file":"static/webpack/static/development/pages/index.js.0a2765ebc5e000838943.hot-update.js","sources":["webpack:///./src/components/SandwichGenerator.tsx","webpack:///./src/components/commons/commons.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Title,\n  SandwichGeneratorApp,\n  GoogleMaps,\n  Result\n} from './commons/sandwich';\nimport { Stack, Container, Button } from './commons/commons';\n\nimport db from './sandwichdb';\nimport Tim from './Tim';\n\nconst SandwichGenerator: React.FC = () => {\n  const [isTalking, setTalking] = React.useState(false);\n  const [currentPlace, setCurrentPlace] = React.useState<any>(null);\n  const setRandomPlace = () => {\n    const place = db[Math.floor(db.length * Math.random())];\n    setCurrentPlace(place);\n  };\n\n  return (\n    <SandwichGeneratorApp>\n      <Container>\n        <Stack>\n          <Title>Smelvin recommend me a sandwich place</Title>\n          <Tim talking={isTalking} />\n          <Button\n            onClick={() => {\n              setCurrentPlace(null);\n              setRandomPlace();\n              setTalking(true);\n              setTimeout(() => setTalking(false), 2000);\n            }}\n          >\n            Reccomend a sandwich place\n          </Button>\n          {currentPlace && <Result place={currentPlace} />}\n          {currentPlace && <GoogleMaps name={currentPlace.name} />}\n        </Stack>\n      </Container>\n    </SandwichGeneratorApp>\n  );\n};\n\nexport default SandwichGenerator;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { white, blue, darkblue } from './variables';\n\nconst Stack = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Container = styled.div`\n  max-width: 70rem;\n  padding: 0 5rem;\n  margin: 0 auto;\n`;\n\nconst Button = styled.button`\n  display: inline-block;\n  font-weight: 400;\n  text-align: center;\n  vertical-align: middle;\n  cursor: pointer;\n  user-select: none;\n  background-color: transparent;\n  border: 1px solid transparent;\n  padding: 0.375rem 0.75rem;\n  font-size: 1rem;\n  line-height: 1.5;\n  border-radius: 0.25rem;\n  color: ${white};\n  background-color: ${blue};\n  transition: transform 0.128s;\n  &:hover {\n    transform: translateY(-3px);\n    background-color: ${darkblue};\n  }\n`;\n\nexport { Stack, Container, Button };\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}